{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","titleError","imgUrlError","imdbUrlError","imdbIdError","urlValidate","handleTitleChange","event","setState","target","value","handleDescriptionChange","handleImgUrlChange","handleImdbUrlChange","handleImdbIdChange","handleSubmit","preventDefault","trim","test","newFilm","props","addMovie","this","onSubmit","onChange","type","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.276d8c7b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleError: false,\n    imgUrlError: false,\n    imdbUrlError: false,\n    imdbIdError: false,\n  };\n\n  // eslint-disable-next-line max-len\n  urlValidate = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  handleTitleChange = (event) => {\n    this.setState({\n      title: event.target.value,\n      titleError: false,\n    });\n  }\n\n  handleDescriptionChange = (event) => {\n    this.setState({\n      description: event.target.value,\n    });\n  }\n\n  handleImgUrlChange = (event) => {\n    this.setState({\n      imgUrl: event.target.value,\n      imgUrlError: false,\n    });\n  }\n\n  handleImdbUrlChange = (event) => {\n    this.setState({\n      imdbUrl: event.target.value,\n      imdbUrlError: false,\n    });\n  }\n\n  handleImdbIdChange = (event) => {\n    this.setState({\n      imdbId: event.target.value,\n      imdbIdError: false,\n    });\n  }\n\n  handleSubmit =(event) => {\n    event.preventDefault();\n\n    const { title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId }\n      = this.state;\n\n    if (!title.trim()\n      || !this.urlValidate.test(imgUrl)\n      || !this.urlValidate.test(imdbUrl)\n      || !imdbId.trim()\n    ) {\n      this.setState({\n        titleError: !title.trim(),\n        imgUrlError: true,\n        imdbUrlError: true,\n        imdbIdError: !imdbId.trim(),\n      });\n\n      return;\n    }\n\n    const newFilm = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.addMovie(newFilm);\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      titleError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form\">\n        <label className=\"form__label\">\n          Title\n          <input\n            className={titleError\n              ? 'form__field form__field--error' : 'form__field'}\n            value={title}\n            onChange={this.handleTitleChange}\n          />\n          <div>\n            {titleError\n            && <span className=\"form__errorMsg\">Enter a Title Please</span>}\n          </div>\n        </label>\n        <label className=\"form__label\">\n          Description\n          <textarea\n            className=\"form__field\"\n            value={description}\n            onChange={this.handleDescriptionChange}\n          />\n        </label>\n        <label className=\"form__label\">\n          imgUrl\n          <input\n            className={imgUrlError\n              ? 'form__field form__field--error' : 'form__field'}\n            value={imgUrl}\n            onChange={this.handleImgUrlChange}\n          />\n          <div>\n            {imgUrlError\n            && <span className=\"form__errorMsg\">Enter image URL please</span>}\n          </div>\n        </label>\n        <label className=\"form__label\">\n          imdbUrl\n          <input\n            value={imdbUrl}\n            className={imdbUrlError\n              ? 'form__field form__field--error' : 'form__field'}\n            onChange={this.handleImdbUrlChange}\n          />\n          <div>\n            {imdbUrlError\n            && <span className=\"form__errorMsg\">Enter imdb URL please</span>}\n          </div>\n        </label>\n        <label className=\"form__label\">\n          imdbId\n          <input\n            value={imdbId}\n            className={imdbIdError\n              ? 'form__field form__field--error' : 'form__field'}\n            onChange={this.handleImdbIdChange}\n          />\n          <div>\n            {imdbIdError\n            && <span className=\"form__errorMsg\">Enter movie ID please</span>}\n          </div>\n        </label>\n        <div className=\"form__btnDiv\">\n          <button type=\"submit\" className=\"form__btn\">\n            Add Movie\n          </button>\n        </div>\n\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}