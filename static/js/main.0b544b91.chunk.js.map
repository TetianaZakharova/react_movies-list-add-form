{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","urlValidate","NewMovie","state","titleError","imgUrlError","imdbUrlError","imdbIdError","handleTitleChange","event","setState","target","value","handleDescriptionChange","handleImgUrlChange","handleImdbUrlChange","handleImdbIdChange","handleReset","blurTitleError","trim","blurImgUrlError","test","blurImdbUrlError","blurImdbIdError","handleSubmit","preventDefault","newFilm","props","addMovie","this","onSubmit","cn","form__field","form__fieldError","onChange","onBlur","type","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b544b91.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\nimport cn from 'classnames';\n\n// eslint-disable-next-line max-len\nconst urlValidate = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleError: false,\n    imgUrlError: false,\n    imdbUrlError: false,\n    imdbIdError: false,\n  };\n\n  handleTitleChange = (event) => {\n    this.setState({\n      title: event.target.value,\n      titleError: false,\n    });\n  }\n\n  handleDescriptionChange = (event) => {\n    this.setState({\n      description: event.target.value,\n    });\n  }\n\n  handleImgUrlChange = (event) => {\n    this.setState({\n      imgUrl: event.target.value,\n      imgUrlError: false,\n    });\n  }\n\n  handleImdbUrlChange = (event) => {\n    this.setState({\n      imdbUrl: event.target.value,\n      imdbUrlError: false,\n    });\n  }\n\n  handleImdbIdChange = (event) => {\n    this.setState({\n      imdbId: event.target.value,\n      imdbIdError: false,\n    });\n  }\n\n  handleReset = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      titleError: false,\n      imgUrlError: false,\n      imdbUrlError: false,\n      imdbIdError: false,\n    });\n  }\n\n  blurTitleError = () => {\n    if (!this.state.title.trim()) {\n      this.setState({\n        titleError: true,\n      });\n    }\n  }\n\n  blurImgUrlError = () => {\n    if (!urlValidate.test(this.state.imgUrl)) {\n      this.setState({\n        imgUrlError: true,\n      });\n    }\n  }\n\n  blurImdbUrlError = () => {\n    if (!urlValidate.test(this.state.imdbUrl)) {\n      this.setState({\n        imdbUrlError: true,\n      });\n    }\n  }\n\n  blurImdbIdError = () => {\n    if (!this.state.imdbId.trim()) {\n      this.setState({\n        imdbIdError: true,\n      });\n    }\n  }\n\n  handleSubmit =(event) => {\n    event.preventDefault();\n\n    const { title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId }\n      = this.state;\n\n    if (!title.trim()\n      || !urlValidate.test(imgUrl)\n      || !urlValidate.test(imdbUrl)\n      || !imdbId.trim()\n    ) {\n      this.setState({\n        titleError: !title.trim(),\n        imgUrlError: !urlValidate.test(imgUrl),\n        imdbUrlError: !urlValidate.test(imdbUrl),\n        imdbIdError: !imdbId.trim(),\n      });\n\n      return;\n    }\n\n    const newFilm = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.addMovie(newFilm);\n\n    this.handleReset();\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      titleError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form\">\n        <label className=\"form__label\">\n          Title\n          <input\n            className={cn({\n              form__field: true,\n              form__fieldError: titleError,\n            })}\n            value={title}\n            onChange={this.handleTitleChange}\n            onBlur={this.blurTitleError}\n          />\n          <div>\n            {titleError\n            && <span className=\"form__errorMsg\">Enter a Title Please</span>}\n          </div>\n        </label>\n        <label className=\"form__label\">\n          Description\n          <textarea\n            className=\"form__field\"\n            value={description}\n            onChange={this.handleDescriptionChange}\n          />\n        </label>\n        <label className=\"form__label\">\n          imgUrl\n          <input\n            className={cn({\n              form__field: true,\n              form__fieldError: imgUrlError,\n            })}\n            value={imgUrl}\n            onChange={this.handleImgUrlChange}\n            onBlur={this.blurImgUrlError}\n          />\n          <div>\n            {imgUrlError\n            && <span className=\"form__errorMsg\">Enter image URL please</span>}\n          </div>\n        </label>\n        <label className=\"form__label\">\n          imdbUrl\n          <input\n            value={imdbUrl}\n            className={cn({\n              form__field: true,\n              form__fieldError: imdbUrlError,\n            })}\n            onChange={this.handleImdbUrlChange}\n            onBlur={this.blurImdbUrlError}\n          />\n          <div>\n            {imdbUrlError\n            && <span className=\"form__errorMsg\">Enter imdb URL please</span>}\n          </div>\n        </label>\n        <label className=\"form__label\">\n          imdbId\n          <input\n            value={imdbId}\n            className={cn({\n              form__field: true,\n              form__fieldError: imdbIdError,\n            })}\n            onChange={this.handleImdbIdChange}\n            onBlur={this.blurImdbIdError}\n          />\n          <div>\n            {imdbIdError\n            && <span className=\"form__errorMsg\">Enter movie ID please</span>}\n          </div>\n        </label>\n        <div className=\"form__btnDiv\">\n          <button type=\"submit\" className=\"form__btn\">\n            Add Movie\n          </button>\n        </div>\n\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}